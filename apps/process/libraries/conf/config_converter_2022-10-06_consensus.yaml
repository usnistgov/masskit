input:
  file:
    # list of input file names
    names:
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/chinese_hamster_hcd_selected.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/human_hcd_labelfree_phospho_selected_passed.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/human_hcd_tryp_best.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/human_hcd_tryp_good.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/human_synthetic_hcd_selected.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/human_hcd_semitryp.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/cptac2_mouse_hcd_selected.msp
      - ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/raw/cptac3_tmt_selected_passed_best.msp
    # input file type
    type:
    # what is the source of the file? nist or pubchem
    source:
  # number of records to generate
  num:

conversion:
  id:
    # name of the id field, like NISTNO. if an integer and reading sdfs, this is the start value of the ids
    field: 1
  small_molecule:
    # maximum bound of 3D conformer in angstroms (0=no limit)
    max_bound: 0.0
  msp:
    # Dict containing instructions on how to parse the value in subfields in msp Comment fields.  For example,
    # "--comment_fields \"{'Filter':(r'@hcd(\d+\.?\d* )', float, 'nce')}\""
    #  where the format is {comment_field_name: (regex, type, field_name)}
    comment_fields:
  set:
    # probabilities of dev, train, valid, and test sets as space delimited list
    probabilities: [0.0, 1.0, 0.0, 0.0]
  spectra:
    # min peak intensity allowed in spectral fingerprint
    min_intensity: 0.0
    # the max mz value allowed in spectral fingerprint
    max_mz: 2000

output:
  file:
    # output file or output file prefix
    name: ${oc.env:HOME}/data/nist/aiomics/take_two/consensus/2022-10-06_consensus.parquet
    # parquet, msp, mzxml
    types:
