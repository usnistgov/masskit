stages:
  - compile
  - deploy

variables:
  AWS_DEFAULT_REGION: "us-east-1"
  PROXYIP: "10.208.85.87"
  
start_runners:
  stage: .pre
  tags:
    - linux
    - control
  script:
    - mkdir -p $HOME/bin
    - aws s3 cp s3://msdc-scripts $HOME/bin --recursive
    - chmod -R +x $HOME/bin
    - $HOME/bin/control_instances.py --start --type gitlab_runner --repository nist_service

compile:
  cache:
    paths:
      - anaconda3
  stage: compile
  script:
    - ./scripts/setup_conda.sh
    - source ./anaconda3/etc/profile.d/conda.sh
    - conda activate prop_predictor
    - pyinstaller --noconfirm smiles2file.spec
    - python3 -m unittest tests/test_basic.py
    - conda deactivate
    - /home/msdc/bin/create_instance.py --web --name "nist_service test ${CI_PIPELINE_ID}" --instance-type t3.medium --no-iam-role --out inst_info.json
    - SERVERIP=$( jq '.Instances[0].PrivateIpAddress' < inst_info.json | tr -d '"' )
    - sleep 120 # wait for instance to settle
    - ./scripts/install_remote.sh $SERVERIP
    - TEST_HOSTNAME=$SERVERIP TEST_PORT=80 python3 tests/test_http.py
    - export AWS_DEFAULT_REGION=us-east-1
  tags:
    - linux
    - nist_service
  artifacts:
    paths:
      - inst_info.json

deploy_prod:
  stage: deploy
  dependencies:
    - compile
  script:
    - echo "Deploy to production server"
    - SERVERIP=$( jq '.Instances[0].PrivateIpAddress' < inst_info.json | tr -d '"' )
    - SERVERID=$( jq '.Instances[0].InstanceId' < inst_info.json | tr -d '"' )
    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no msdc@$PROXYIP /usr/local/sbin/set_proxy.py $SERVERIP
    - TEST_HOSTNAME=$PROXYIP TEST_PORT=80 python3 tests/test_http.py
    - aws ec2 create-tags --resources $SERVERID --tags Key=Name,Value="NIST Service Production"
  environment:
    name: production
  when: manual
  tags:
    - linux
    - control

stop_runners:
  stage: .post
  when: always
  tags:
    - linux
    - control
  script:
    - $HOME/bin/control_instances.py --stop --type gitlab_runner --repository nist_service
